30 7			 
9 10 14 8 6 8 11 6 11 13 4 6 3 12 3 7 6 6 13 11 7 2 11 2 8 4 7 6 6 14 

9 10 14 8 6 8 11 // копируем первые k элементов
6 8 8 9 10 11 14 // сортируем скопированные элементы
в цикле для i от k до n(не включительно) делаем: 
	9 // выписываем значение из середины
	9 // обозначим за del элемент с индексом i-k
	6 // обозначим за ins элемент с индексом k
	3 // обозначим за del_idx самое правое местонахождение элемента со значением d(используя функцию upper_bound())
	0 // обозначим за ins_idx самое правое местонахождение элемента со значением ins или ins-1(используя функцию upper_bound())
	если del_idx > ins_idx то
		2 //уменьшаем del_idx на 1
		6 8 8 9 10 11 14 // копируем элементы из промежутка от ins_idx до del_idx в промежуток от ins_idx+1 в del_idx+1
		0 //если значение с индексом ins_idx меньше чем ins, то увеличиваем ins_idx на 1
	иначе если del_idx < ins_idx 
		//увеличиваем del_idx на 1
		// копируем элементы с промежутка от del_idx до ins_idx в промежуток от del_idx-1 до ins_idx-1
	6 6 8 8 10 11 14 // элемент с индексом ins_idx приравнивается к ins
6 // выписываем значение из середины
// конец
